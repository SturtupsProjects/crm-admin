definitions:
  entity.AdminPass:
    properties:
      password:
        type: string
      phone_number:
        type: string
    type: object
  entity.Error:
    properties:
      error: {}
    type: object
  entity.LogIn:
    properties:
      password:
        type: string
      phone_number:
        type: string
    type: object
  entity.Message:
    properties:
      message:
        type: string
    type: object
  entity.Token:
    properties:
      access_token:
        type: string
      expire_at:
        type: integer
      refresh_token:
        type: string
    type: object
  entity.User:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      role:
        type: string
    type: object
  entity.UserList:
    properties:
      users:
        items:
          $ref: '#/definitions/entity.UserRequest'
        type: array
    type: object
  entity.UserRequest:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      role:
        type: string
      user_id:
        description: Omitted for Create
        type: string
    type: object
  entity.UserUpdate:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      role:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/admin/register:
    post:
      consumes:
      - application/json
      description: Register a new admin account
      parameters:
      - description: Register admin
        in: body
        name: RegisterAdmin
        required: true
        schema:
          $ref: '#/definitions/entity.AdminPass'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.Error'
      summary: Register an Admin
      tags:
      - Admin
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login for admin users
      parameters:
      - description: Admin login
        in: body
        name: Login
        required: true
        schema:
          $ref: '#/definitions/entity.LogIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.Error'
      summary: Admin Login
  /auth/user/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user account
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.Error'
      summary: Delete User
      tags:
      - User
  /auth/user/get/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve user details by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.Error'
      summary: Get User
      tags:
      - User
  /auth/user/list:
    get:
      consumes:
      - application/json
      description: Retrieve a list of users with optional filters
      parameters:
      - in: query
        name: first_name
        type: string
      - in: query
        name: last_name
        type: string
      - in: query
        name: role
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.UserList'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.Error'
      summary: List Users
      tags:
      - User
  /auth/user/register:
    post:
      consumes:
      - application/json
      description: Register a new user account
      parameters:
      - description: Create user
        in: body
        name: CreateUser
        required: true
        schema:
          $ref: '#/definitions/entity.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.Error'
      summary: Create User
      tags:
      - User
  /auth/user/update/{id}:
    put:
      consumes:
      - application/json
      description: Update user details
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Update user
        in: body
        name: UpdateUser
        required: true
        schema:
          $ref: '#/definitions/entity.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.Error'
      summary: Update User
      tags:
      - User
securityDefinitions:
  BearerAuth:
    description: Enter your bearer token here
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
